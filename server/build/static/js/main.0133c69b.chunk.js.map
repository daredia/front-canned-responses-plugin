{"version":3,"sources":["Store.js","FrontActions.js","DataElement.js","Info.js","ContactsDropdown.js","App.js","index.js"],"names":["StoreContext","createContext","useStoreState","useContext","state","stateReducer","oldState","action","console","log","value","type","secret","airtableKey","airtable_key","airtableBase","airtable_base","frontContext","children","useReducer","dispatch","useEffect","URL","document","location","href","searchParams","get","subscription","contextUpdates","subscribe","newContext","unsubscribe","storeContextValue","useMemo","Provider","FrontLink","label","openUrl","onClick","e","preventDefault","FrontCompose","to","createDraft","className","Date","parsedDate","DateTime","fromISO","invalid","toFormat","Currency","amount","Number","amountString","toFixed","Math","round","Badge","DataElement","length","join","Info","contactKey","useState","isLoading","setLoadingState","info","setInfo","error","setError","uri","encodeURIComponent","withAirtableCredentials","emptyInfo","fetch","method","mode","then","r","ok","status","Error","statusText","json","response","Object","assign","data","catch","err","message","finally","contact","name","email","account","url","undefined","map","idx","key","ContactsDropdown","contacts","currentContact","setContact","onChange","target","c","Application","setContacts","conversation","setCurrentContact","listMessages","allMessagesContacts","results","m","t","handle","from","cc","bcc","b","flat","filter","index","self","indexOf","recipient","basename","process","path","App","ReactDOM","render","StrictMode","Store","getElementById"],"mappings":"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","file":"static/js/main.0133c69b.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useMemo } from 'react';\nimport { contextUpdates } from '@frontapp/plugin-sdk';\n\nexport const StoreContext = createContext(null);\n\nexport const useStoreState = () => {\n  const { state } = useContext(StoreContext);\n  return state;\n};\n\nexport const useStoreDispatch = () => {\n  const { dispatch } = useContext(StoreContext);\n  return dispatch;\n};\n\nconst stateReducer = (oldState, action) => {\n  console.log(action, action.value);\n\n  if (action.type === 'secret_set')\n    return {...oldState, secret: action.value};\n\n  if (action.type === 'airtable_credentials_set')\n    return {\n      ...oldState,\n      airtableKey: action.value.airtable_key,\n      airtableBase: action.value.airtable_base\n    };\n\n  if (action.type === 'new_context_received')\n    return {...oldState, frontContext: action.value};\n\n  return oldState;\n};\n\nexport default ({ children }) => {\n  const [state, dispatch] = useReducer(stateReducer, null);\n  \n  useEffect(() => {\n    // The auth_secret is used for authentication of the plugin\n    const secret = (new URL(document.location.href)).searchParams.get('auth_secret');\n    console.log(`Secret is ${secret}`);\n\n    dispatch({type: 'secret_set', value: secret});\n\n    // In the hosted version, users can provide their own Airtable key and base ID\n    const airtable_key = (new URL(document.location.href)).searchParams.get('airtable_key');\n    const airtable_base = (new URL(document.location.href)).searchParams.get('airtable_base');\n\n    if (airtable_key && airtable_base)\n      dispatch({type: 'airtable_credentials_set', value: {airtable_key, airtable_base}});\n\n    const subscription = contextUpdates.subscribe(newContext => dispatch({type: 'new_context_received', value: newContext}));\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const storeContextValue = useMemo(() => ({\n    state,\n    dispatch\n  }), [state, dispatch]);\n\n  if (!state?.frontContext)\n    return null;\n\n  return <StoreContext.Provider value={storeContextValue}>\n    {children}\n  </StoreContext.Provider>;\n};","import React from 'react';\nimport { useStoreState } from './Store';\n\nexport const FrontLink = ({ label, href }) => {\n  const { frontContext } = useStoreState();\n  const { openUrl } = frontContext;\n\n  return (\n    <a onClick={(e) => {e.preventDefault(); openUrl(href);}} href={href}>\n      {label}\n    </a>\n  );\n};\n\nexport const FrontCompose = ({ label, to }) => {\n  const { frontContext } = useStoreState();\n  const { createDraft } = frontContext;\n\n  return (\n    <button className=\"front-compose\" onClick={() => createDraft({to: [to]})}>{label}</button>\n  );\n};\n","import React from 'react';\nimport { DateTime } from 'luxon';\n\nconst Date = ({ value }) => { \n  const parsedDate = DateTime.fromISO(value);\n\n  if (parsedDate.invalid)\n    return <em>Invalid date</em>;\n  \n  return parsedDate.toFormat('D');\n};\n\nconst Currency = ({ value }) => {\n  const amount = Number(value); \n  const amountString = amount < 1000 ?\n    amount.toFixed(0) :\n    amount < 1000000 ?\n      `${Math.round(amount / 10) / 100}k` :\n      `${Math.round(amount / 10000) / 100}m`;\n  return <span>${amountString}</span>;\n};\n\nconst Badge = ({ value }) => <span className=\"data-badge\">{value}</span>;\n\nconst DataElement = ({ type, value }) => {\n  if (type === 'date')\n    return <Date value={value} />\n\n  if (type === 'badge')\n    return <Badge value={value} />\n  \n  if (type === 'currency')\n    return <Currency value={value} />\n\n  if (type === 'list' && value.length > 0)\n    return <>{value.join(', ')}</>;\n\n  return <>{value}</>;\n};\n\nexport default DataElement;","import React, { useState, useEffect } from 'react';\nimport { useStoreState } from './Store';\nimport { FrontLink, FrontCompose } from './FrontActions';\nimport DataElement from './DataElement';\n\nconst Info = ({ contactKey }) => {\n  const { secret, airtableKey, airtableBase } = useStoreState();\n\n  const [isLoading, setLoadingState] = useState(true);\n  const [info, setInfo] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (info.contactKey === contactKey)\n      return;\n  \n    const uri = `/api/search?auth_secret=${secret}&contact_key=${encodeURIComponent(contactKey)}`;\n    // For the hosted version, we pass the Airtable credentials to the server\n    const withAirtableCredentials = (airtableKey && airtableBase) ? `&airtable_key=${airtableKey}&airtable_base=${airtableBase}` : '';\n    const emptyInfo = {contactKey: contactKey};\n\n    setLoadingState(true);\n    setError(null);\n\n    fetch(`${uri}${withAirtableCredentials}`, {\n      method: 'GET',\n      mode: 'cors'\n    })\n    .then(r => {\n      if (!r.ok && r.status !== 404)\n        throw Error(r.statusText);\n\n      if(r.status === 404)\n        return ({});\n\n      return r.json();\n    })\n    .then(response => setInfo(Object.assign(emptyInfo, response.data)))\n    .catch((err) => {\n      setInfo(emptyInfo);\n      setError(err.message);\n    })\n    .finally(() => setLoadingState(false));\n  }, [info, contactKey, secret, airtableKey, airtableBase]);\n\n  if (isLoading)\n    return <div className=\"notice\">Loading...</div>;\n\n  if (error)\n    return <div className=\"notice error\">{error}</div>;\n\n  if (!info || !info.contact)\n    return <div className=\"notice\">No record found.</div>;\n\n  return (\n    <div className=\"info\">\n      <div className=\"info-card\">\n        <div className=\"info-card-contact\">{info.contact?.name}</div>\n        <div><FrontCompose to={info.contact?.email} label={info.contact?.email} /></div>\n        { info.account ? (\n          <div className=\"info-card-account\"><FrontLink href={info.account.url} label={info.account.name} /></div>\n        ) : undefined }\n      </div>\n      <div className=\"info-contact\">\n        { info.contact?.data ? (\n          <>\n            <div className=\"data-title\">Contact info</div>\n            <ul className=\"list-data\">\n              {info.contact.data.map((e, idx) => <li key={idx}>\n                <div className=\"info-entry\">\n                  <div className=\"info-label\">{e.label}</div>\n                  <div className=\"info-value\"><DataElement type={e.type} value={e.value} /></div>\n                </div>\n              </li>)}\n            </ul>\n          </>\n        ) : undefined }\n      </div>\n      <div className=\"info-account\">\n        { info.account?.data ? (\n            <>\n              <div className=\"data-title\">Account info</div>\n              <ul className=\"list-data\">\n               {info.account.data.map((e, idx) => <li key={idx}>\n                  <div className=\"info-entry\">\n                    <div className=\"info-label\">{e.label}</div>\n                    <div className=\"info-value\"><DataElement type={e.type} value={e.value} /></div>\n                  </div>\n                </li>)}\n              </ul>\n            </>\n          ) : undefined }\n      </div>\n    </div>\n  );\n};\n\nexport default Info;","import React from 'react';\n\nconst ContactsDropdown = ({ contacts, currentContact, setContact }) => {\n  if (!currentContact)\n    return <></>;\n\n  return (\n    <div className=\"select-container\">\n      <select className=\"select-contact\" value={currentContact} onChange={(e) => setContact(e.target.value)}>\n        {contacts.map(c => <option key={c}>{c}</option>)}\n      </select>\n      <i className=\"chevron-down\">⌄</i>\n    </div>\n  );\n}\n\nexport default ContactsDropdown;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useStoreState } from './Store';\nimport Info from './Info';\nimport ContactsDropdown from './ContactsDropdown';\n\nconst Application = () => {\n  const [contacts, setContacts] = useState([]);\n  const { frontContext } = useStoreState();\n  const { type, conversation } = frontContext;\n  const [currentContact, setCurrentContact] = useState(null);\n\n  useEffect(() => {\n    if (!frontContext.listMessages)\n      return undefined;\n\n    frontContext.listMessages().then(r => {\n      const allMessagesContacts = r.results\n        .map(m => [...(m.to.map(t => t.handle)), m.from?.handle, ...(m.cc?.map(c => c.handle) || []), ...(m.bcc?.map(b => b.handle) || [])])\n        .flat()\n        .filter((value, index, self) => self.indexOf(value) === index);\n      \n      setCurrentContact(conversation?.recipient?.handle);\n      setContacts(allMessagesContacts);\n    });\n  }, [frontContext, conversation]);\n\n  return <div className=\"app\">\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\">\n          { (type === 'singleConversation' && currentContact) ? (\n            <>\n              <ContactsDropdown contacts={contacts} currentContact={currentContact} setContact={setCurrentContact} />\n              <Info contactKey={currentContact} />\n            </>\n          ) : <div className=\"notice\">This plugin only works with conversations.</div> }\n        </Route>\n      </Switch>\n    </Router>\n  </div>;\n};\n\nexport default Application;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreProvider from './Store';\nimport App from './App';\nimport './App.css';\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}